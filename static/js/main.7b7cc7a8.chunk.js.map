{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","toggleAdd","good","setState","prevState","isGoodIncluded","filter","item","clearAllGoods","find","goodsDisplay","length","slice","join","className","this","type","onClick","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAe,CACbC,cAAe,CAAC,Q,EAGlBC,UAAY,SAACC,GACPA,GACF,EAAKC,UAAS,SAACC,GACb,OAAQ,EAAKC,eAAeH,GAExB,CAAEF,cAAeI,EAAUJ,cAAcM,QAAO,SAAAC,GAAI,OAAIA,IAASL,MADjE,CAAEF,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BE,S,EAMxDM,cAAgB,WACd,EAAKL,SAAS,CACZH,cAAe,M,EAInBK,eAAiB,SAACH,GAChB,OAAO,EAAKH,MAAMC,cAAcS,MAAK,SAAAF,GAAI,OAAIA,IAASL,M,EAGxDQ,aAAe,WACb,IAAQV,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcW,QACpB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUX,EAAc,GAAxB,gBACF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAc,GAAxB,gBAAkCA,EAAc,GAAhD,iBACF,QACE,MAAM,GAAN,OAAUA,EAAcY,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBAAuDb,EAAcY,OAAO,GAA5E,mB,4CAIN,WAAU,IAAD,OACP,OACE,sBAAKE,UAAU,MAAf,UACE,sBAAKA,UAAU,cAAf,UACE,gDAEE,sBAAMA,UAAU,4BAAhB,SAA6CC,KAAKL,oBAEnDK,KAAKhB,MAAMC,cAAcW,OAAS,GACjC,wBACEK,KAAK,SACLF,UAAU,0BACVG,QAAS,kBAAM,EAAKT,iBAHtB,kBASHX,EAAgBqB,KAAI,SAAAhB,GAAI,OACvB,yBAASY,UAAU,QAAnB,SACE,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,aAAf,SAA6BZ,IAC7B,wBACEc,KAAK,SACLF,UAAU,SACVG,QAAS,kBAAM,EAAKhB,UAAUC,IAHhC,SAKI,EAAKG,eAAeH,GAAgB,SAAR,YARJA,a,GA3DxBiB,IAAMC,WA6ETtB,IC9FfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7b7cc7a8.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: ['Jam'],\n  };\n\n  toggleAdd = (good: string) => {\n    if (good) {\n      this.setState((prevState) => {\n        return !this.isGoodIncluded(good)\n          ? { selectedGoods: [...prevState.selectedGoods, good] }\n          : { selectedGoods: prevState.selectedGoods.filter(item => item !== good) };\n      });\n    }\n  };\n\n  clearAllGoods = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  };\n\n  isGoodIncluded = (good: string) => {\n    return this.state.selectedGoods.find(item => item === good);\n  };\n\n  goodsDisplay = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n      case 2:\n        return `${selectedGoods[0]} and ${selectedGoods[1]} are selected`;\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods.slice(-1)} are selected`;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"title-block\">\n          <h1>\n            Selected good:\n            <span className=\"title-block__selectedGood\">{this.goodsDisplay()}</span>\n          </h1>\n          {this.state.selectedGoods.length > 0 && (\n            <button\n              type=\"button\"\n              className=\"button button--clearAll\"\n              onClick={() => this.clearAllGoods()}\n            >\n              X\n            </button>\n          )}\n        </div>\n        {goodsFromServer.map(good => (\n          <section className=\"goods\" key={good}>\n            <div className=\"goods__good good\">\n              <div className=\"good__item\">{good}</div>\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => this.toggleAdd(good)}\n              >\n                {!this.isGoodIncluded(good) ? 'add' : 'remove'}\n              </button>\n            </div>\n          </section>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}